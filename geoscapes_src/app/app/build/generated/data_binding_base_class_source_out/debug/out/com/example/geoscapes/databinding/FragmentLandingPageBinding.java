// Generated by view binder compiler. Do not edit!
package com.example.geoscapes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.geoscapes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLandingPageBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView currentTaskTextView;

  @NonNull
  public final Button goButton;

  @NonNull
  public final LinearLayout setTaskLinearLayout;

  @NonNull
  public final TextView setTaskTextView;

  @NonNull
  public final TextView storyLineTextView;

  @NonNull
  public final TextView storyTextView;

  @NonNull
  public final TextView taskTextView;

  private FragmentLandingPageBinding(@NonNull LinearLayout rootView,
      @NonNull TextView currentTaskTextView, @NonNull Button goButton,
      @NonNull LinearLayout setTaskLinearLayout, @NonNull TextView setTaskTextView,
      @NonNull TextView storyLineTextView, @NonNull TextView storyTextView,
      @NonNull TextView taskTextView) {
    this.rootView = rootView;
    this.currentTaskTextView = currentTaskTextView;
    this.goButton = goButton;
    this.setTaskLinearLayout = setTaskLinearLayout;
    this.setTaskTextView = setTaskTextView;
    this.storyLineTextView = storyLineTextView;
    this.storyTextView = storyTextView;
    this.taskTextView = taskTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLandingPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLandingPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_landing_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLandingPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.currentTaskTextView;
      TextView currentTaskTextView = ViewBindings.findChildViewById(rootView, id);
      if (currentTaskTextView == null) {
        break missingId;
      }

      id = R.id.goButton;
      Button goButton = ViewBindings.findChildViewById(rootView, id);
      if (goButton == null) {
        break missingId;
      }

      id = R.id.setTaskLinearLayout;
      LinearLayout setTaskLinearLayout = ViewBindings.findChildViewById(rootView, id);
      if (setTaskLinearLayout == null) {
        break missingId;
      }

      id = R.id.setTaskTextView;
      TextView setTaskTextView = ViewBindings.findChildViewById(rootView, id);
      if (setTaskTextView == null) {
        break missingId;
      }

      id = R.id.storyLineTextView;
      TextView storyLineTextView = ViewBindings.findChildViewById(rootView, id);
      if (storyLineTextView == null) {
        break missingId;
      }

      id = R.id.storyTextView;
      TextView storyTextView = ViewBindings.findChildViewById(rootView, id);
      if (storyTextView == null) {
        break missingId;
      }

      id = R.id.taskTextView;
      TextView taskTextView = ViewBindings.findChildViewById(rootView, id);
      if (taskTextView == null) {
        break missingId;
      }

      return new FragmentLandingPageBinding((LinearLayout) rootView, currentTaskTextView, goButton,
          setTaskLinearLayout, setTaskTextView, storyLineTextView, storyTextView, taskTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
